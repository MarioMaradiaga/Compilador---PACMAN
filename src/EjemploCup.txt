non terminal CONDICION, EXPRECOMP, OPERADORLO, EQUALSVAL, EQUALSIDENT, SIGNOCOMP;
non terminal VALORCOMP, CONTENIDOCONDICION,EXPRESIONCONT, EQUALSTYPE; 
non terminal CICLOFOR, EXPRECICLOFOR, CONTENIDOCICLOFOR, EXPRECOMPCICLOFOR, CONTADOR;

/* The grammar */

CICLOFOR ::= FOR PARIZ1 EXPRECICLOFOR PARDER BRAIZ1 CONTENIDOCICLOFOR ;

EXPRECICLOFOR ::= DECLARACION DOSPUNTOS EXPRECOMPCICLOFOR DOSPUNTOS CONTADOR DOSPUNTOS ;

CONTENIDOCICLOFOR ::= EXPRESIONCONT BRADER DOSPUNTOS ;

EXPRECOMPCICLOFOR ::= EQUALSVAL
              | EQUALSIDENT
;

CONTADOR ::= IDENT SUMA SUMA 
              | IDENT SUMA ENTERO
;

CONDICION ::= IF PARIZQ EXPRECOMP PARDER BRAIZQ CONTENIDOCONDICION ;

EXPRECOMP ::= EQUALSVAL
              | EQUALSIDENT
              | EQUALSTYPE 
              | EQUALSVAL OPERADORLO EXPRECOMP
              | EQUALSIDENT OPERADORLO EXPRECOMP
              | EQUALSTYPE OPERADORLO EXPRECOMP
;

OPERADORLO ::= AND
             | OR
;

EQUALSVAL ::= IDENT SIGNOCOMP VALORCOMP;

EQUALSIDENT ::= IDENT SIGNOCOMP IDENT;

EQUALSTYPE ::= IDENT SIGNOCOMP TIPO;

SIGNOCOMP ::= IGUAL 
                | MENOR
                | MAYOR
                | MENORIGUAL
                | MAYORIGUAL
                | NOIGUAL
;                

VALORCOMP ::= CADENA
		| CHARVAL
		| BOOLVAL
		| NUM
                | NULL
;

CONTENIDOCONDICION ::= EXPRESIONCONT BRADER DOSPUNTOS
                | EXPRESIONCONT BRADER ELSE BRAIZQ EXPRESIONCONT BRADER DOSPUNTOS 
;

EXPRESIONCONT ::= EXPRESION EXPRESIONCONT
                | ASIGNACION EXPRESIONCONT
                | CONDICION EXPRESIONCONT
                | DECLARACION EXPRESIONCONT
                | CICLOWHILE EXPRESIONCONT
                | CICLOFOR EXPRESIONCONT
                | FUNCION EXPRESIONCONT
                | VACIO
;
